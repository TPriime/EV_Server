{"version":3,"sources":["../../src/handlers/server.js"],"names":["util","require","express","ex_server","server","createServer","module","exports","response","device_handler","PORT","process","env","VERBOSE","bodyParser","use","json","route","get","req","res","params","data","setTimeout","status","election_data","end","log","post","console","body","start_server","listen"],"mappings":";;AAAA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,UAAUD,QAAQ,SAAR,CAAhB;AACA,IAAME,YAAYD,SAAlB;AACA,IAAME,SAASH,QAAQ,MAAR,EAAgBI,YAAhB,CAA6BF,SAA7B,CAAf;AACAG,OAAOC,OAAP,GAAiBH,MAAjB;AACA,IAAMI,WAAWP,QAAQ,0BAAR,CAAjB;AACA,IAAMQ,iBAAiBR,QAAQ,qBAAR,CAAvB;AACA,IAAMS,OAAOC,QAAQC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA,IAAMG,UAAUF,QAAQC,GAAR,CAAYC,OAAZ,GAAsB,IAAtC;;AAEA,IAAIC,aAAab,QAAQ,aAAR,CAAjB;;AAEAE,UAAUY,GAAV,CAAcD,WAAWE,IAAX,EAAd;;AAEAb,UAAUc,KAAV,CAAgB,YAAhB,EACKC,GADL,CACS,UAACC,GAAD,EAAMC,GAAN,EAAY;AACb,YAAOD,IAAIE,MAAJ,CAAWC,IAAlB;AACI,aAAK,eAAL;AACIC,uBAAW,YAAI;AACXH,oBAAII,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqBR,SAASiB,aAA9B;AACH,aAFD,EAEG,GAFH;;AAIA;AACA;;AAEJ;AACIL,gBAAII,MAAJ,CAAW,GAAX;AACAJ,gBAAIM,GAAJ,CAAQ,SAAR;AAXR;;AAcAb,eAAWb,KAAK2B,GAAL,CAASR,IAAIE,MAAJ,CAAWC,IAApB,EAA0B,SAA1B,CAAX;AACH,CAjBL,EAkBKM,IAlBL,CAkBU,UAACT,GAAD,EAAMC,GAAN,EAAY;AACdS,YAAQF,GAAR,CAAYR,IAAIW,IAAhB;AACAV,QAAIM,GAAJ,CAAQ,iBAAR;AACH,CArBL;;AAyBAjB,eAAesB,YAAf,CAA4B3B,MAA5B;AACAA,OAAO4B,MAAP,CAActB,IAAd,EAAoB;AAAA,WAAImB,QAAQF,GAAR,+BAAwCjB,IAAxC,CAAJ;AAAA,CAApB","file":"server.js","sourcesContent":["const util = require('util');\nconst express = require('express');\nconst ex_server = express();\nconst server = require('http').createServer(ex_server);\nmodule.exports = server;\nconst response = require(\"./resources/responses.js\")\nconst device_handler = require('./device-handler.js');\nconst PORT = process.env.PORT || 8080;\nconst VERBOSE = process.env.VERBOSE = true;\n\nlet bodyParser = require('body-parser');\n\nex_server.use(bodyParser.json());\n\nex_server.route(\"/api/:data\")\n    .get((req, res)=>{\n        switch(req.params.data){\n            case \"election_data\":\n                setTimeout(()=>{\n                    res.status(200).json(response.election_data);\n                }, 500)\n\n                //res.status(200).json(response.election_data);\n                break;\n            \n            default:\n                res.status(404);\n                res.end(\"invalid\");\n        }       \n\n        VERBOSE && util.log(req.params.data, \"fetched\");\n    })\n    .post((req, res)=>{\n        console.log(req.body);\n        res.end(\"hey from server\"); \n    })\n\n\n\ndevice_handler.start_server(server);\nserver.listen(PORT, ()=>console.log(`server listening on port ${PORT}`));\n\n"]}